# This module defines the schema for the `Product` entity and its associations in an ArangoDB database.
# It represents the structure and relationships of a product within the application's context.
defmodule Vectora.Tools.Product do

  # Includes functionality from the ArangoXEcto.Schema module,
  # which provides macros and functions to define ArangoDB collections and their associations.
  use ArangoXEcto.Schema

  # Imports functions from the Ecto.Changeset module to assist with data validation and changeset creation.
  import Ecto.Changeset

  # Defines the `products` collection schema.
  schema "products" do
    # Defines fields for the schema.
    field :name, :string
    field :description, :string

    # Defines outgoing edges (relationships) from the `products` collection to other collections.
    # `racis` connects to the RACI collection.
    # `partners` connects to the Partner collection.
    # `value_propositions` connects to the ValueProposition collection.
    outgoing :racis, Vectora.Tools.RACI
    outgoing :partners, Vectora.Tools.Partner
    outgoing :value_propositions, Vectora.Tools.ValueProposition

    # Defines incoming edges (relationships) to the `products` collection from other collections.
    # `business_model_canvas` connects from the BusinessModelCanvas collection to the Product collection.
    incoming :business_model_canvas, Vectora.Tools.BusinessModelCanvas

    # Automatically generates fields for timestamps (inserted_at and updated_at).
    timestamps()
  end

  # @doc false hides this function from autogenerated documentation.
  # This function creates a changeset for the Product schema, which helps validate and track changes to records.
  #
  # @param product - The current state of the Product record.
  # @param attrs - The attributes with which we want to update the Product record.
  # @return - Returns a changeset that represents the changes to be made.
  def changeset(product, attrs) do
    product
    # Casts the provided attributes to their respective fields.
    |> cast(attrs, [:name, :description])
    # Validates that the required fields are present in the changeset.
    |> validate_required([:name, :description])
  end
end
